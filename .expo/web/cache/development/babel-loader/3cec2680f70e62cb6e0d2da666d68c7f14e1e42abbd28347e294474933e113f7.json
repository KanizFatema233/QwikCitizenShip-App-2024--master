{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nconst _excluded = [\"scrollPosition\", \"dimensions\", \"vertical\", \"sliderWidth\", \"sliderHeight\", \"parallaxFactor\", \"style\", \"AnimatedImageComponent\"];\nvar _jsxFileName = \"F:\\\\projects\\\\QwikCitizenShip-App-2024--master\\\\node_modules\\\\react-native-snap-carousel\\\\src\\\\parallaximage\\\\ParallaxImage.js\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport PropTypes from 'prop-types';\nimport styles from './ParallaxImage.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ParallaxImage extends Component {\n  static propTypes = _objectSpread(_objectSpread({}, Image.propTypes), {}, {\n    carouselRef: PropTypes.object,\n    itemHeight: PropTypes.number,\n    itemWidth: PropTypes.number,\n    scrollPosition: PropTypes.object,\n    sliderHeight: PropTypes.number,\n    sliderWidth: PropTypes.number,\n    vertical: PropTypes.bool,\n    containerStyle: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n    dimensions: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number\n    }),\n    fadeDuration: PropTypes.number,\n    parallaxFactor: PropTypes.number,\n    showSpinner: PropTypes.bool,\n    spinnerColor: PropTypes.string,\n    AnimatedImageComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  });\n  static defaultProps = {\n    containerStyle: {},\n    fadeDuration: 500,\n    parallaxFactor: 0.3,\n    showSpinner: true,\n    spinnerColor: 'rgba(0, 0, 0, 0.4)',\n    AnimatedImageComponent: Animated.Image\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      offset: 0,\n      width: 0,\n      height: 0,\n      status: 1,\n      animOpacity: new Animated.Value(0)\n    };\n    this._onLoad = this._onLoad.bind(this);\n    this._onError = this._onError.bind(this);\n    this._measureLayout = this._measureLayout.bind(this);\n  }\n  setNativeProps(nativeProps) {\n    this._container.setNativeProps(nativeProps);\n  }\n  componentDidMount() {\n    this._mounted = true;\n    setTimeout(() => {\n      this._measureLayout();\n    }, 0);\n  }\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n  _measureLayout() {\n    if (this._container) {\n      const {\n        dimensions,\n        vertical,\n        carouselRef,\n        sliderWidth,\n        sliderHeight,\n        itemWidth,\n        itemHeight\n      } = this.props;\n      if (carouselRef) {\n        this._container.measureLayout(findNodeHandle(carouselRef), (x, y, width, height, pageX, pageY) => {\n          const offset = vertical ? y - (sliderHeight - itemHeight) / 2 : x - (sliderWidth - itemWidth) / 2;\n          this.setState({\n            offset: offset,\n            width: dimensions && dimensions.width ? dimensions.width : Math.ceil(width),\n            height: dimensions && dimensions.height ? dimensions.height : Math.ceil(height)\n          });\n        });\n      }\n    }\n  }\n  _onLoad(event) {\n    const {\n      animOpacity\n    } = this.state;\n    const {\n      fadeDuration,\n      onLoad\n    } = this.props;\n    if (!this._mounted) {\n      return;\n    }\n    this.setState({\n      status: 2\n    });\n    if (onLoad) {\n      onLoad(event);\n    }\n    Animated.timing(animOpacity, {\n      toValue: 1,\n      duration: fadeDuration,\n      easing: Easing.out(Easing.quad),\n      isInteraction: false,\n      useNativeDriver: true\n    }).start(() => {\n      this.setState({\n        status: 3\n      });\n    });\n  }\n  _onError(event) {\n    const {\n      onError\n    } = this.props;\n    this.setState({\n      status: 4\n    });\n    if (onError) {\n      onError(event);\n    }\n  }\n  get image() {\n    const {\n      status,\n      animOpacity,\n      offset,\n      width,\n      height\n    } = this.state;\n    const _this$props = this.props,\n      {\n        scrollPosition,\n        dimensions,\n        vertical,\n        sliderWidth,\n        sliderHeight,\n        parallaxFactor,\n        style,\n        AnimatedImageComponent\n      } = _this$props,\n      other = _objectWithoutProperties(_this$props, _excluded);\n    const parallaxPadding = (vertical ? height : width) * parallaxFactor;\n    const requiredStyles = {\n      position: 'relative'\n    };\n    const dynamicStyles = {\n      width: vertical ? width : width + parallaxPadding * 2,\n      height: vertical ? height + parallaxPadding * 2 : height,\n      opacity: animOpacity,\n      transform: scrollPosition ? [{\n        translateX: !vertical ? scrollPosition.interpolate({\n          inputRange: [offset - sliderWidth, offset + sliderWidth],\n          outputRange: [-parallaxPadding, parallaxPadding],\n          extrapolate: 'clamp'\n        }) : 0\n      }, {\n        translateY: vertical ? scrollPosition.interpolate({\n          inputRange: [offset - sliderHeight, offset + sliderHeight],\n          outputRange: [-parallaxPadding, parallaxPadding],\n          extrapolate: 'clamp'\n        }) : 0\n      }] : []\n    };\n    return _jsxDEV(AnimatedImageComponent, _objectSpread(_objectSpread({}, other), {}, {\n      style: [styles.image, style, requiredStyles, dynamicStyles],\n      onLoad: this._onLoad,\n      onError: status !== 3 ? this._onError : undefined\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this);\n  }\n  get spinner() {\n    const {\n      status\n    } = this.state;\n    const {\n      showSpinner,\n      spinnerColor\n    } = this.props;\n    return status === 1 && showSpinner ? _jsxDEV(View, {\n      style: styles.loaderContainer,\n      children: _jsxDEV(ActivityIndicator, {\n        size: 'small',\n        color: spinnerColor,\n        animating: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this) : false;\n  }\n  render() {\n    const {\n      containerStyle\n    } = this.props;\n    return _jsxDEV(View, {\n      ref: c => {\n        this._container = c;\n      },\n      pointerEvents: 'none',\n      style: [containerStyle, styles.container],\n      onLayout: this._measureLayout,\n      children: [this.image, this.spinner]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","View","ViewPropTypes","Image","Animated","Easing","ActivityIndicator","findNodeHandle","PropTypes","styles","jsxDEV","_jsxDEV","ParallaxImage","propTypes","_objectSpread","carouselRef","object","itemHeight","number","itemWidth","scrollPosition","sliderHeight","sliderWidth","vertical","bool","containerStyle","style","dimensions","shape","width","height","fadeDuration","parallaxFactor","showSpinner","spinnerColor","string","AnimatedImageComponent","oneOfType","func","defaultProps","constructor","props","state","offset","status","animOpacity","Value","_onLoad","bind","_onError","_measureLayout","setNativeProps","nativeProps","_container","componentDidMount","_mounted","setTimeout","componentWillUnmount","measureLayout","x","y","pageX","pageY","setState","Math","ceil","event","onLoad","timing","toValue","duration","easing","out","quad","isInteraction","useNativeDriver","start","onError","image","_this$props","other","_objectWithoutProperties","_excluded","parallaxPadding","requiredStyles","position","dynamicStyles","opacity","transform","translateX","interpolate","inputRange","outputRange","extrapolate","translateY","undefined","fileName","_jsxFileName","lineNumber","columnNumber","spinner","loaderContainer","children","size","color","animating","render","ref","c","pointerEvents","container","onLayout"],"sources":["F:/projects/QwikCitizenShip-App-2024--master/node_modules/react-native-snap-carousel/src/parallaximage/ParallaxImage.js"],"sourcesContent":["// Parallax effect inspired by https://github.com/oblador/react-native-parallax/\n\nimport React, { Component } from 'react';\nimport { View, ViewPropTypes, Image, Animated, Easing, ActivityIndicator, findNodeHandle } from 'react-native';\nimport PropTypes from 'prop-types';\nimport styles from './ParallaxImage.style';\n\nexport default class ParallaxImage extends Component {\n\n    static propTypes = {\n        ...Image.propTypes,\n        carouselRef: PropTypes.object, // passed from <Carousel />\n        itemHeight: PropTypes.number, // passed from <Carousel />\n        itemWidth: PropTypes.number, // passed from <Carousel />\n        scrollPosition: PropTypes.object, // passed from <Carousel />\n        sliderHeight: PropTypes.number, // passed from <Carousel />\n        sliderWidth: PropTypes.number, // passed from <Carousel />\n        vertical: PropTypes.bool, // passed from <Carousel />\n        containerStyle: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n        dimensions: PropTypes.shape({\n            width: PropTypes.number,\n            height: PropTypes.number\n        }),\n        fadeDuration: PropTypes.number,\n        parallaxFactor: PropTypes.number,\n        showSpinner: PropTypes.bool,\n        spinnerColor: PropTypes.string,\n        AnimatedImageComponent: PropTypes.oneOfType([\n            PropTypes.func,\n            PropTypes.object\n        ])\n    };\n\n    static defaultProps = {\n        containerStyle: {},\n        fadeDuration: 500,\n        parallaxFactor: 0.3,\n        showSpinner: true,\n        spinnerColor: 'rgba(0, 0, 0, 0.4)',\n        AnimatedImageComponent: Animated.Image\n    }\n\n    constructor (props) {\n        super(props);\n        this.state = {\n            offset: 0,\n            width: 0,\n            height: 0,\n            status: 1, // 1 -> loading; 2 -> loaded // 3 -> transition finished; 4 -> error\n            animOpacity: new Animated.Value(0)\n        };\n        this._onLoad = this._onLoad.bind(this);\n        this._onError = this._onError.bind(this);\n        this._measureLayout = this._measureLayout.bind(this);\n    }\n\n    setNativeProps (nativeProps) {\n        this._container.setNativeProps(nativeProps);\n    }\n\n    componentDidMount () {\n        this._mounted = true;\n\n        setTimeout(() => {\n            this._measureLayout();\n        }, 0);\n    }\n\n    componentWillUnmount () {\n        this._mounted = false;\n    }\n\n    _measureLayout () {\n        if (this._container) {\n            const {\n                dimensions,\n                vertical,\n                carouselRef,\n                sliderWidth,\n                sliderHeight,\n                itemWidth,\n                itemHeight\n            } = this.props;\n\n            if (carouselRef) {\n                this._container.measureLayout(\n                    findNodeHandle(carouselRef),\n                    (x, y, width, height, pageX, pageY) => {\n                        const offset = vertical ?\n                            y - ((sliderHeight - itemHeight) / 2) :\n                            x - ((sliderWidth - itemWidth) / 2);\n\n                        this.setState({\n                            offset: offset,\n                            width: dimensions && dimensions.width ?\n                                dimensions.width :\n                                Math.ceil(width),\n                            height: dimensions && dimensions.height ?\n                                dimensions.height :\n                                Math.ceil(height)\n                        });\n                    }\n                );\n            }\n        }\n    }\n\n    _onLoad (event) {\n        const { animOpacity } = this.state;\n        const { fadeDuration, onLoad } = this.props;\n\n        if (!this._mounted) {\n            return;\n        }\n\n        this.setState({ status: 2 });\n\n        if (onLoad) {\n            onLoad(event);\n        }\n\n        Animated.timing(animOpacity, {\n            toValue: 1,\n            duration: fadeDuration,\n            easing: Easing.out(Easing.quad),\n            isInteraction: false,\n            useNativeDriver: true\n        }).start(() => {\n            this.setState({ status: 3 });\n        });\n    }\n\n    // If arg is missing from method signature, it just won't be called\n    _onError (event) {\n        const { onError } = this.props;\n\n        this.setState({ status: 4 });\n\n        if (onError) {\n            onError(event);\n        }\n    }\n\n    get image () {\n        const { status, animOpacity, offset, width, height } = this.state;\n        const {\n            scrollPosition,\n            dimensions,\n            vertical,\n            sliderWidth,\n            sliderHeight,\n            parallaxFactor,\n            style,\n            AnimatedImageComponent,\n            ...other\n        } = this.props;\n\n        const parallaxPadding = (vertical ? height : width) * parallaxFactor;\n        const requiredStyles = { position: 'relative' };\n        const dynamicStyles = {\n            width: vertical ? width : width + parallaxPadding * 2,\n            height: vertical ? height + parallaxPadding * 2 : height,\n            opacity: animOpacity,\n            transform: scrollPosition ? [\n                {\n                    translateX: !vertical ? scrollPosition.interpolate({\n                        inputRange: [offset - sliderWidth, offset + sliderWidth],\n                        outputRange: [-parallaxPadding, parallaxPadding],\n                        extrapolate: 'clamp'\n                    }) : 0\n                },\n                {\n                    translateY: vertical ? scrollPosition.interpolate({\n                        inputRange: [offset - sliderHeight, offset + sliderHeight],\n                        outputRange: [-parallaxPadding, parallaxPadding],\n                        extrapolate: 'clamp'\n                    }) : 0\n                }\n            ] : []\n        };\n\n        return (\n            <AnimatedImageComponent\n              {...other}\n              style={[styles.image, style, requiredStyles, dynamicStyles]}\n              onLoad={this._onLoad}\n              onError={status !== 3 ? this._onError : undefined} // prevent infinite-loop bug\n            />\n        );\n    }\n\n    get spinner () {\n        const { status } = this.state;\n        const { showSpinner, spinnerColor } = this.props;\n\n        return status === 1 && showSpinner ? (\n            <View style={styles.loaderContainer}>\n                <ActivityIndicator\n                  size={'small'}\n                  color={spinnerColor}\n                  animating={true}\n                />\n            </View>\n        ) : false;\n    }\n\n    render () {\n        const { containerStyle } = this.props;\n\n        return (\n            <View\n              ref={(c) => { this._container = c; }}\n              pointerEvents={'none'}\n              style={[containerStyle, styles.container]}\n              onLayout={this._measureLayout}\n            >\n                { this.image }\n                { this.spinner }\n            </View>\n        );\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}